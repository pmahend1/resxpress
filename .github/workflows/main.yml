# This is a basic workflow to help you get started with Actions

name: Publish VS Code Extension

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
  # You may pin to the exact commit or the version.
  # uses: HaaLeo/publish-vscode-extension@50cf7921c9e1bc32992682b15b5760ba28973e85
  uses: HaaLeo/publish-vscode-extension@v0
  with:
    # Personal access token
    pat: 
    # Path to the vsix file to be published. Cannot be used together with packagePath.
    extensionFile: # optional
    # Use the registry API at this base URL
    registryUrl: # optional, default is https://open-vsx.org
    # Path to the extension to be packaged and published. Cannot be used together with extensionFile.
    packagePath: # optional, default is ./
    # Prepend all relative links in README.md with this URL.
    baseContentUrl: # optional
    # Prepend all relative image links in README.md with this URL.
    baseImagesUrl: # optional
    # Use yarn instead of npm while packing extension files.
    yarn: true
    # Set this option to "true" to package your extension but do not publish it.
    dryRun: # optional
